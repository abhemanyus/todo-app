{"version":3,"sources":["TodoList.js","AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","list","markDone","deleteTodo","listItems","map","id","todo","done","className","style","color","onClick","visibility","length","AddTodo","props","handleChange","e","setState","prevState","target","value","handleSubmit","preventDefault","state","addTodo","alert","onSubmit","this","htmlFor","onChange","placeholder","Component","App","todos","count","entry","idx","filter","clearAll","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57ed301e.chunk.js","sourcesContent":["function TodoList({list, markDone, deleteTodo}) {\n  const listItems = list.map(\n    ({id, todo, done}) => {\n      return (\n        <li className=\"card-header\" key={id} style={{color: done ? \"green\" : \"red\"}}>\n          <p>{todo}</p>\n          <button onClick={() => markDone(id)} \n          style={{visibility: done ? \"hidden\": \"visible\"}}>Done</button>\n          <button onClick={() => deleteTodo(id)}>Delete</button>\n        </li>\n      );\n    }\n  );\n  return (\n    <ol className=\"todoList card card-body m-2\">\n      { listItems }\n      <li className=\"card-header\" style={{visibility: list.length ? \"hidden\": \"visible\"}}>Congratz, no ToDo's left!</li>\n    </ol>\n  );\n}\n\nexport default TodoList;","import { Component } from \"react\";\n\nclass AddTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      todo: \"\",\n      done: false\n    };\n  }\n  handleChange = (e) => {\n    this.setState(prevState => ({\n      todo: e.target.value,\n      done:false\n    }));\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if(!this.state.todo) {\n      alert(\"Todo cannot be blank!\");\n      return;\n    }\n    this.props.addTodo(this.state);\n    this.setState({\n      todo: \"\",\n      done: false\n    });\n  }\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit} className=\"addTodo card card-body text-center m-1\">\n        <label htmlFor=\"todo\" className=\"card card-header m-1 \">Todo:</label>\n        <input id=\"todo\" className=\"card card-text m-1\" onChange={this.handleChange} value={this.state.todo} placeholder=\"Enter Text\"></input>\n        <button className=\"btn btn-info m-1\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default AddTodo;","import { Component } from \"react\";\nimport TodoList from './TodoList.js';\nimport AddTodo from './AddTodo.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [\n        {\n          id: 0,\n          todo: \"Buy some milk\",\n          done: false\n        },\n        {\n          id: 1,\n          todo: \"Mow the lawn\",\n          done: false\n        },\n        {\n          id: 2,\n          todo: \"Air out the matress\",\n          done: false\n        }\n      ],\n      count: 3\n    };\n  }\n  addTodo = (todo) => {\n    this.setState(({todos, count}) => {\n      const entry = {id: count, ...todo};\n      return ({\n        todos: [...todos, entry],\n        count: count + 1\n      });\n    });\n  };\n  markDone = (idx) => {\n    this.setState(\n      ({todos,count}) => ({\n        todos: todos.map( todo => \n          todo.id === idx ? \n          {id: todo.id, todo: todo.todo, done: true} \n          :todo),\n        count: count\n      })\n    );\n  };\n  deleteTodo = (idx) => {\n    this.setState(\n      ({todos, count}) => ({\n        todos: todos.filter( ({id}) => id !== idx),\n        count: count\n      })\n    )\n  };\n  clearAll = () => {\n    this.setState({\n      todos: [],\n      count: 0\n    })\n  }\n  render() {\n    return (\n      <div className=\"App card\">\n        <AddTodo addTodo={this.addTodo}/>\n        <br/>\n        <button className=\"btn btn-danger m-2\" onClick={this.clearAll}>Clear</button>\n        <TodoList list={this.state.todos} markDone={this.markDone} deleteTodo={this.deleteTodo}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}